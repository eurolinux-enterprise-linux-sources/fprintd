From 5fbf831083093248412363aa21816ebfc103c284 Mon Sep 17 00:00:00 2001
From: Bastien Nocera <hadess@hadess.net>
Date: Mon, 27 Jan 2014 12:24:14 +0100
Subject: [PATCH] pam: Fix eventfd leak

When we create our own GMainContext, we need to be the ones
disposing of it as well, as GMainLoop won't take ownership of it.

From https://bugzilla.redhat.com/show_bug.cgi?id=1050827
---
 pam/pam_fprintd.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/pam/pam_fprintd.c b/pam/pam_fprintd.c
index 82ab0fe..f632494 100644
--- a/pam/pam_fprintd.c
+++ b/pam/pam_fprintd.c
@@ -163,6 +163,17 @@ static void close_and_unref (DBusGConnection *connection)
 	dbus_g_connection_unref (connection);
 }
 
+static void unref_loop (GMainLoop *loop)
+{
+	GMainContext *ctx;
+
+	/* The main context was created separately, so
+	 * we'll need to unref it ourselves */
+	ctx = g_main_loop_get_context (loop);
+	g_main_loop_unref (loop);
+	g_main_context_unref (ctx);
+}
+
 static DBusGProxy *open_device(pam_handle_t *pamh, DBusGConnection *connection, DBusGProxy *manager, const char *username)
 {
 	GError *error = NULL;
@@ -383,13 +394,13 @@ static int do_auth(pam_handle_t *pamh, const char *username)
 	dev = open_device(pamh, connection, manager, username);
 	g_object_unref (manager);
 	if (!dev) {
-		g_main_loop_unref (loop);
+		unref_loop (loop);
 		close_and_unref (connection);
 		return PAM_AUTHINFO_UNAVAIL;
 	}
 	ret = do_verify(loop, pamh, dev);
 
-	g_main_loop_unref (loop);
+	unref_loop (loop);
 	release_device(pamh, dev);
 	g_object_unref (dev);
 	close_and_unref (connection);
-- 
2.1.0

